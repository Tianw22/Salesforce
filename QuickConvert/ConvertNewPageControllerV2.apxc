public class ConvertNewPageController {
  
    @AuraEnabled
    public static List<String> getFieldSetMember(String objectName , String fieldSetName){
        List<String> fieldList = new List<String>();
        Schema.SObjectType sObj = Schema.getGlobalDescribe().get(objectName);
        for(Schema.FieldSetMember fieldMember : sObj.getDescribe().fieldSets.getMap().get(fieldSetName).getFields()){
            fieldList.add(fieldMember.getFieldPath());
        }
        return fieldList;
    }

    public static Boolean isConverted;
    
    @AuraEnabled
    public static String convertIt(String recordId) {
        
        Lead lead = [SELECT Id ,Status, OwnerId,
                     ConvertedContactId,Account_Name__c  
                     FROM Lead WHERE Id =:recordId LIMIT 1];
        update lead;
        isConverted = false;
        Database.LeadConvert ldconvert = new Database.LeadConvert(); 
        ldconvert.setLeadId(lead.id);
        ldconvert.setOwnerId(lead.OwnerId);
        LeadStatus convertStatus = [SELECT Id, MasterLabel FROM LeadStatus WHERE IsConverted=true LIMIT 1];
        ldconvert.setConvertedStatus(convertStatus.MasterLabel);
        ldconvert.setSendNotificationEmail(false);
        ldconvert.setDoNotCreateOpportunity(TRUE);
        ldconvert.setAccountId(lead.Account_Name__c);
        try{           
            Database.LeadConvertResult result = Database.convertLead(ldconvert); 
            System.Debug('Conversion Result: ' + result.isSuccess());
            if(result.isSuccess()){
                isConverted = true;
            }    
        }        
        catch(DmlException e){          
            System.debug(e.getCause()); 
        }
        Lead convLead = [SELECT Id,ConvertedContactId
                         FROM Lead WHERE Id =:recordId LIMIT 1];
        System.Debug(convLead.ConvertedContactId);
        return String.valueOf(convLead.ConvertedContactId);
    }
}
